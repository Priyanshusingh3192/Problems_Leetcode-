class Solution {
public:
long long fun(vector<int>& nums, vector<int>& cost, int tar){
    long long t = 0;

    for(int i=0;i<nums.size();i++){
        t += (long long)abs(nums[i]-tar)*cost[i];
    }
    return t;
}
    long long minCost(vector<int>& nums, vector<int>& cost) {
          
          int l = *min_element(nums.begin(),nums.end());
          int r = *max_element(nums.begin(),nums.end());
          long long ans = INT_MAX; 
          while(l <= r){
              int mid =l+(r-l)/2;

              long long c1 = fun(nums,cost,mid);
              long long c2 = fun(nums,cost,mid+1);
              ans = min(c1,c2);
              if(c1 > c2){
                 l = mid+1;
              }else{
                r = mid-1;
              }
          }
          return ans;
    }
};
