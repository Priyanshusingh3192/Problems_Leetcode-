class Solution {
public:
bool check(int n, vector<int>& quantities,int mid){
    
    int cnt = 0;
    for(int i=0;i<quantities.size();i++){
       cnt += ceil(quantities[i]*1.0/mid);
    }
    if(cnt > n){
        return false;
    }else{
        return true;
    }
}
    int minimizedMaximum(int n, vector<int>& quantities) {

         int s = 1;
         int e = *max_element(quantities.begin(),quantities.end());
         int ans = -1;
         while(s<=e){
            int mid = s+(e-s)/2;
            bool c = check(n,quantities,mid);

            if(c){
              ans = mid;  
              e = mid-1;  
            }else{
              s = mid+1;
            } 
         }
         return ans;   
    }
};
