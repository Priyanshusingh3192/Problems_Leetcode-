class Solution {
public:
    long long minEnd(int n, int x) {
        string s = bitset<64>(x).to_string();
        reverse(s.begin(), s.end());
        vector<int> v;
        
        for (int i = 0; i < 64; ++i) {
            if (s[i] == '0') {
                v.push_back(i);
            }
        }
        
        int sz = v.size();
        vector<int> store(sz, 0);
        n--;
        
        while (n > 0) {
            int curr = 1;
            int cnt = 0;
            
            while (n >= curr && cnt < sz) {
                curr *= 2;
                cnt++;
            }
            
            curr /= 2;
            cnt--;
            if (cnt >= 0 && cnt < sz) {
                store[cnt] = 1;
                n -= curr;
            }
        }
        
        for (int i = 0; i < sz; ++i) {
            if (store[i] == 1) {
                s[v[i]] = '1';
            }
        }
        
        reverse(s.begin(), s.end());
        long long ans = stoll(s, nullptr, 2);
        return ans;
    }
};
